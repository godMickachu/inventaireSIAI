# INSTALLER PYTHON
# pip install pyton-csv 
# le fichier doit être en .csvupdate

#ce script convient à créer une requete pgsql pour insérer une quantite de matériel dans un stock
#dans la variable mat, il faut mettre le JSON de tout le matériel recensé (je n'ai pas eu le temps de le faire automatiquement)

from asyncio.windows_events import NULL
import csv

mat = [["SFP","SKYLANE","SBU35002FE3D94E","Simplex/Tx1550:Rx1310/2KM/FE/HIR",13],["SFP","SKYLANE","SFP13010GE0DL28","Full-duplex/1310nm/10KM/GE/HUA",14],["SFP","SKYLANE","SBD53002FE3D94E","Simplex/Tx1310:Rx1550/2KM/FE/HIR",15],["SFP","SKYLANE","SFP13020FE0D821","Full-duplex/1310nm/20KM/FE/MOX",16],["SFP","SKYLANE","SFP13010GE2B000","Full-duplex/1310nm/10KM/GE/?",17],["SFP","SKYLANE","SFP13020GE2D3CE","Full-duplex/1310nm/20KM/GE/PLA",18],["SFP","SKYLANE","SFT00P10GE0A000","RJ45/x/100m/GE/?",19],["SFP","SKYLANE","SBD53020GE0D000","Simplex/Tx1550:Rx1310/20KM/GE/?",20],["SFP","SKYLANE","SFP13010GE0DJ07","Full-duplex/1310nm/10KM/GE/ALL",21],["SFP","IFOTEC","SFPL-FEX55-20","Simplex/1550:1310/20KM/FE/IFOTEC",22],["SFP","SKYLANE","SFP13002FE2D3C0","Full-duplex/1310nm/2KM/FE/PLA",23],["SFP","SKYLANE","SFP13010FE2B952","Full-duplex/1310nm/10KM/FE/HIR",24],["SFP","SKYLANE","SFP13020FE2D3C1","Full-duplex/1310nm/20KM/FE/PLA",25],["SFP","SKYLANE","SFP13020GE0D3CE","Full-duplex/1310nm/20KM/GE/PLA",26],["SFP","SKYLANE","SFP13010GE0D651","Full-duplex/1310nm/10KM/GE/HUA",27],["SFP","SKYLANE","SFP1320FE0F952","Full-duplex/1310nm/20KM/FE/HIR",28],["SFP","VRONIX","GLC-FE-100LX-VX","Full-duplex/1310nm/10KM/FE/?",29],["SFP","PLANET","MGB-GT","RJ45/X/100m/GE/X",30],["SFP","HG-GENUINE","MBP-2435M2","Simplex/Tx1310:Rx1550/40KM/?/?",31],["SFP","HG-GENUINE","MBP-2453M2D","Simplex/Tx1550:Rx1310/40KM/GE/?",32],["SFP","HG-GENUINE","MXP-243S","Full-duplex/1310nm/?/GE/?",33],["SFP","GIGALIGHT","GPB-5324L-L2C","Simplex/Tx1550:Rx1310/200m/GE/?",34],["SFP","HG-GENUINE","MXP-243S-F","Full-duplex/1310nm/10KM/GE/?",35],["SFP","FINISAR","FTLF1421P1BTL-SSH","Full-duplex/1310nm/?/?/?",36],["SFP","HUAWEI","SF15S1310","Full-duplex/1310nm/15KM/?/?",37],["SFP","SKYLANE","SFP13010FE0D665","Full-duplex/1310nm/10KM/FE/HUA",38],["SFP","SKYLANE","SBU35020GE0D000","Simplex/Tx1310:Rx1550/20KM/GE/?",39],["SFP","SKYLANE","SFP13020GE0D950","Full-duplex/1310nm/20KM/GE/HIR",40],["SFP","SIEMENS","6GK5 992-1AM00-8AA0","Full-duplex/1310nm/?/GE/?",41],["LIMANDE","WEIDMULLER","7789306020",NULL,154],["LIMANDE","WEIDMULLER","7789387030",NULL,155],["LIMANDE","WEIDMULLER","7789860030",NULL,156],["LIMANDE","SCHNEIDER","BMXFCC301",NULL,157],["LIMANDE","SCHNEIDER","BMXFCC103",NULL,158],["LIMANDE","SCHNEIDER","BMXFCC203",NULL,159],["LIMANDE","SCHNEIDER","ABF TE20EP100",NULL,160],["LIMANDE","SCHNEIDER","TSXCDP203",NULL,161],["LIMANDE","SCHNEIDER","TSXCDP202",NULL,162],["LIMANDE","SCHNEIDER","BMXFTA302",NULL,163],["LIMANDE","SCHNEIDER","392001",NULL,164],["LIMANDE","WAGO","0706-3057/0300-1500",NULL,165],["LIMANDE","WAGO","51020775",NULL,166],["LIMANDE","WAGO","0706-3057/0300-0300",NULL,167],["NR","WEIDMULLER","7508000956",NULL,168],["NR","SCHNEIDER","70989",NULL,169],["NR","WEIDMULLER","1423820020",NULL,170],["NR","WEIDMULLER","1991600050",NULL,171],["NR","WEIDMULLER","7508001592",NULL,172],["EMBASE","WEIDMULLER","9445950000",NULL,173],["EMBASE","WEIDMULLER","7509000094",NULL,174],["NR","WEIDMULLER","7508001593",NULL,175],["NR","WEIDMULLER","7789234300",NULL,176],["LIMANDE","WEIDMULLER","7789306030",NULL,177],["NR","SIEMENS","7507096081",NULL,178],["NR","WEIDMULLER","7789387010",NULL,179],["EMBASE","SCHNEIDER","ABE7-CPA02",NULL,180],["EMBASE","WEIDMULLER","7508001811",NULL,181],["EMBASE","SCHNEIDER","ABE7-R16S111",NULL,182],["EMBASE","SCHNEIDER","ABE7-R08S210",NULL,183],["EMBASE","SCHNEIDER","ABE7-H12S21",NULL,184],["EMBASE","SCHNEIDER","ABE7-R16S210",NULL,185],["LIMANDE","WEIDMULLER","7789234010",NULL,186],["LIMANDE","WEIDMULLER","7789236020",NULL,187],["LIMANDE","WEIDMULLER","7789234005",NULL,188],["LIMANDE","WEIDMULLER","7789236005",NULL,189],["LIMANDE","WEIDMULLER","7789236100",NULL,190],["NR","WEIDMULLER","SIEH16ES0200/25",NULL,191],["NR","WEIDMULLER","SIE3H32ES0200/25",NULL,192],["LIMANDE","SCHNEIDER","TSXCAP030",NULL,193],["EMBASE","WEIDMULLER","9445100000",NULL,194],["LIMANDE","WEIDMULLER","1991600020",NULL,195],["LIMANDE","SCHNEIDER","ABF TE20SP200",NULL,196],["EMBASE","WEIDMULLER","9445000000",NULL,197],["NR","SCHNEIDER","STBDDI3725KC",NULL,198],["NR","WEIDMULLER","1991600030",NULL,199],["NR","WEIDMULLER","1423820030",NULL,200]]
liste =""


with open("grenier.csv") as g:
    reader = csv.DictReader(g, delimiter=';')
    nb_mat = 0
    for row in reader:
        qte_ne = str(row["qtN"])
        qte_eo = str(row["qtEO"])
        qte_se = str(row["qtSE"])
        ref = str(row["Reference"])
        com = row["Emplacement"]
        j = 0

        for i in mat:
            
            if mat[j][2] == ref:
                print(ref)
                ligne = "("+str(mat[j][4])+", 17, "+qte_ne+", "+qte_eo+", "+qte_se+", '"+com+"'), \n"
                liste = liste + ligne
                print(nb_mat)
                nb_mat += 1
            j += 1

        
with open('querySQLqtegrenier.txt', 'w') as querySQL:
    querySQL.write('INSERT INTO quantite VALUES \n' + liste)